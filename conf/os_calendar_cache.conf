[Debugging]
# Throttles amount of debugging information. If set, logs to log_file.
# See https://docs.python.org/2/library/logging.html#levels
# debug_level = NOTSET
debug_level = NOTSET

# Absolute path to log file; set debug_level to NOTSET to disable logging.
# log_file = /var/log/os_calendar_cache.log
log_file = /var/log/os_calendar_cache.log

[Parsing]
# String for finding outages marked "completed".
# resolved_pattern = 52fd10b1ca2d496af32163f088d8ec96
resolved_pattern = 52fd10b1ca2d496af32163f088d8ec96

# How far into the future upcoming outages should be displayed (seconds).
# scope_ahead = 2678400
scope_ahead = 2678400

# How far into the past completed outages should be displayed (seconds).
# scope_past = 43200
scope_past = 43200

[States]
# [0] Icon name: icon filenames
# [1] Timeout: how long to display the widget pop-up (milliseconds)
# [2] Urgency: used by NOTIFY_SEND module
#
# active = outages-active:0:URGENCY_CRITICAL
active = outages-active:0:URGENCY_CRITICAL
# completed = outages-completed:5000:URGENCY_LOW
completed = outages-completed:5000:URGENCY_LOW
# default = outages-error:0:URGENCY_LOW
default = outages-error:0:URGENCY_LOW
# error = outages-error:5000:URGENCY_LOW
error = outages-error:5000:URGENCY_LOW
# none = outages-default:0:URGENCY_LOW
none = outages-default:0:URGENCY_LOW
# scheduled = outages-scheduled:10000:URGENCY_NORMAL
scheduled = outages-scheduled:10000:URGENCY_NORMAL

[Sources]
# URL of the calendar ICAL feed.
# feed_url = http://projects.iq.harvard.edu/rce/calendar/export.ics
feed_url = http://projects.iq.harvard.edu/rce/calendar/export.ics

# Connection timeout grace period (for OpenScholar outages) in seconds.
# url_timeout = 14400
url_timeout = 14400

# URL of the outages calendar.
# website_url = http://projects.iq.harvard.edu/rce/calendar
website_url = http://projects.iq.harvard.edu/rce/calendar

[WorkingFiles]
# Absolute path (no trailing slash) to ical and xml files.
# working_directory = /nfs/tools/outagenotifier
working_directory = /nfs/tools/outagenotifier